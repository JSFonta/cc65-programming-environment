;
; File generated by cc65 v 2.17 - Git 6c320f7d
;
	.fopt		compiler,"cc65 v 2.17 - Git 6c320f7d"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_printf
	.import		_mega65_fast
	.import		_setup_screen
	.import		_write_line
	.import		_clrscr
	.import		_layout
	.export		_setupSerial
	.export		_write_modem
	.export		_modem_line
	.export		_modem_line_len
	.export		_process_modem_line
	.export		_poll_modem
	.export		_main

.segment	"DATA"

_modem_line_len:
	.byte	$00

.segment	"RODATA"

L016A:
	.byte	$48,$65,$6C,$6C,$6F,$20,$77,$6F,$72,$6C,$64,$21,$00
L0127:
	.byte	$25,$73,$0A,$00

.segment	"BSS"

_modem_line:
	.res	255,$00

; ---------------------------------------------------------------
; int __near__ setupSerial (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_setupSerial: near

.segment	"CODE"

	lda     #$B2
	sta     $D0E6
	lda     #$01
	sta     $D0E7
	ldx     #$00
	txa
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ write_modem (__near__ const unsigned char *, const unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_write_modem: near

.segment	"CODE"

	jsr     pusha
	jsr     decsp1
	lda     #$00
L0178:	sta     (sp)
	ldy     #$01
	cmp     (sp),y
	jeq     incsp4
	ldy     #$03
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	lda     (sp)
	tay
	lda     (ptr1),y
	sta     $D0E0
	lda     (sp)
	ina
	bra     L0178

.endproc

; ---------------------------------------------------------------
; void __near__ process_modem_line (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_process_modem_line: near

.segment	"CODE"

	lda     #<(L0127)
	ldx     #>(L0127)
	jsr     pushax
	lda     #<(_modem_line)
	ldx     #>(_modem_line)
	jsr     pushax
	ldy     #$04
	jmp     _printf

.endproc

; ---------------------------------------------------------------
; void __near__ poll_modem (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_poll_modem: near

.segment	"CODE"

	lda     $D0E0
	jsr     pusha
	lda     (sp)
	beq     L013B
	cmp     #$0D
	beq     L0179
	cmp     #$0A
	bne     L017A
L0179:	ldy     _modem_line_len
	lda     #$00
	sta     _modem_line,y
	jsr     _process_modem_line
	stz     _modem_line_len
	jmp     incsp1
L017A:	lda     _modem_line_len
	cmp     #$FE
	bcs     L013B
	inc     _modem_line_len
	clc
	adc     #<(_modem_line)
	sta     ptr1
	lda     #$00
	adc     #>(_modem_line)
	sta     ptr1+1
	lda     (sp)
	sta     (ptr1)
L013B:	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"RODATA"

L0148:
	.byte	$59,$45,$53,$20,$4F,$50,$54,$55,$53,$00
	.byte	$30,$39,$3A,$32,$36,$3A,$33,$30,$00
	.res	1,$00
	.byte	$34,$47,$2B,$00
	.res	6,$00
	.byte	$4C,$6F,$77,$00
	.res	6,$00
L0150:
	.byte	$50,$61,$75,$6C,$00
	.res	13,$00
	.byte	$4A,$73,$00
	.res	15,$00
	.byte	$53,$65,$63,$72,$65,$74,$00
	.res	11,$00
	.byte	$4C,$6F,$72,$65,$6D,$20,$49,$70,$73,$75,$6D,$00
	.res	6,$00
	.byte	$46,$6C,$69,$6E,$64,$65,$72,$73,$00
	.res	9,$00

.segment	"CODE"

	ldy     #$66
	jsr     subysp
	lda     #$00
	jsr     pusha
	jsr     decsp1
	jsr     pusha
	ldy     #$28
	jsr     subysp
	ldy     #$27
L014C:	lda     L0148,y
	sta     (sp),y
	dey
	bpl     L014C
	ldy     #$5A
	jsr     subysp
	ldy     #$59
L0155:	lda     L0150,y
	sta     (sp),y
	dey
	bpl     L0155
	jsr     _mega65_fast
	jsr     _setup_screen
	stz     $D021
	lda     #$41
	sta     $0000
	lda     #$47
	sta     $D02F
	lda     #$53
	sta     $D02F
	jsr     _setupSerial
	lda     #<(L016A)
	ldx     #>(L016A)
	jsr     pushax
	lda     #$00
	jsr     _write_line
	jsr     _clrscr
	lda     #$01
	jsr     _layout
L017B:	bra     L017B

.endproc

